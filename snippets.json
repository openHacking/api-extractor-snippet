{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	"api-extractor @alpha": {
	  "prefix": "@alpha",
	  "body": ["@alpha", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @beta": {
	  "prefix": "@beta",
	  "body": ["@beta", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @defaultValue": {
	  "prefix": "@defaultValue",
	  "body": ["@defaultValue", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @deprecated": {
	  "prefix": "@deprecated",
	  "body": ["@deprecated", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @eventProperty": {
	  "prefix": "@eventProperty",
	  "body": ["@eventProperty", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @example": {
	  "prefix": "@example",
	  "body": ["@example", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @inheritDoc": {
	  "prefix": "@inheritDoc",
	  "body": ["{@inheritDoc ${1:DECLARATION}} "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @internal": {
	  "prefix": "@internal",
	  "body": ["@internal", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @link URL": {
	  "prefix": "@link",
	  "body": ["{@link ${1:URL}} "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @link URL|TEXT": {
	  "prefix": "@link text",
	  "body": ["{@link ${1:URL} | ${2:TEXT}} "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @override": {
	  "prefix": "@override",
	  "body": ["@override", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @packageDocumentation": {
	  "prefix": "@packageDocumentation",
	  "body": ["@packageDocumentation", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @param": {
	  "prefix": "@param",
	  "body": ["@param", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @preapproved": {
	  "prefix": "@preapproved",
	  "body": ["@preapproved", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @privateRemarks": {
	  "prefix": "@privateRemarks",
	  "body": ["@privateRemarks", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @public": {
	  "prefix": "@public",
	  "body": ["@public", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @readonly": {
	  "prefix": "@readonly",
	  "body": ["@readonly", "* "],
	  "description": "Api-extractor tags snippet"
	},
  
	"api-extractor @remarks": {
	  "prefix": "@remarks",
	  "body": ["@remarks", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @returns": {
	  "prefix": "@returns",
	  "body": ["@returns", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @sealed": {
	  "prefix": "@sealed",
	  "body": ["@sealed", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @typeParam": {
	  "prefix": "@typeParam",
	  "body": ["@typeParam", "* "],
	  "description": "Api-extractor tags snippet"
	},
	"api-extractor @virtual": {
	  "prefix": "@virtual",
	  "body": ["@virtual", "* "],
	  "description": "Api-extractor tags snippet"
	}
  }
  